name: Release

on:
  push:
    branches: [main]

env:
  CI: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check for release needed
        id: check
        run: |
          # Ëé∑ÂèñÊúÄÊñ∞Ê†áÁ≠æ
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")

          # Ëé∑ÂèñÊñ∞Êèê‰∫§
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --oneline --pretty=format:"%s")
          else
            COMMITS=$(git log ${LAST_TAG}..HEAD --oneline --pretty=format:"%s")
          fi

          echo "Recent commits:"
          echo "$COMMITS"

          # Ê£ÄÊü•ÊòØÂê¶ÈúÄË¶ÅÂèëÂ∏É
          if echo "$COMMITS" | grep -qE "^(feat|fix|perf)(\(.+\))?:" || echo "$COMMITS" | grep -qE "(BREAKING CHANGE|!)"; then
            echo "release_needed=true" >> $GITHUB_OUTPUT
            echo "üöÄ Release needed"
          else
            echo "release_needed=false" >> $GITHUB_OUTPUT
            echo "‚ÑπÔ∏è No release needed"
          fi

      - name: Run tests
        if: steps.check.outputs.release_needed == 'true'
        run: |
          pnpm lint
          pnpm typecheck
          pnpm test
          pnpm build

      - name: Configure Git
        if: steps.check.outputs.release_needed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Release
        if: steps.check.outputs.release_needed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm release --ci
